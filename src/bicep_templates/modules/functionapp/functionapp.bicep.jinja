// The template to create a function app

param name string = 'fnapp-${uniqueString(resourceGroup().id)}'
@allowed([
  'Standard_LRS'
  'Standard_GRS'
  'Standard_RAGRS'
])
param storageAccountType string = 'Standard_LRS'
param location string = resourceGroup().location
@allowed([
  'node'
  'dotnet'
  'java'
])
param runtime string = 'node'
param identityType string = 'SystemAssigned'
param functionAppPlanId string
param appSettings array = []
param storageAccountName string = '${uniqueString(resourceGroup().id)}azfunctions'


resource storageAccount 'Microsoft.Storage/storageAccounts@2022-05-01' = {
  name: storageAccountName
  location: location
  kind: 'StorageV2'
  sku: {
    name: storageAccountType
  }
  properties: {
    supportsHttpsTrafficOnly: true
    defaultToOAuthAuthentication: true
  }
}

resource functionapp 'Microsoft.Web/sites@2022-09-01' = {
	name: name
	location: location
  kind: 'functionapp'
	properties: {
		serverFarmId: functionAppPlanId
		siteConfig: {
			appSettings: concat(appSettings, [
        {
          name: 'FUNCTIONS_WORKER_RUNTIME'
          value: runtime
        }
        {
          name: 'AzureWebJobsStorage'
          value: 'DefaultEndpointsProtocol=https;AccountName=${storageAccountName};EndpointSuffix=${environment().suffixes.storage};AccountKey=${storageAccount.listKeys().keys[0].value}'
        }
        {
          name: 'WEBSITE_CONTENTAZUREFILECONNECTIONSTRING'
          value: 'DefaultEndpointsProtocol=https;AccountName=${storageAccountName};EndpointSuffix=${environment().suffixes.storage};AccountKey=${storageAccount.listKeys().keys[0].value}'
        }
        {
          name: 'WEBSITE_CONTENTSHARE'
          value: toLower(name)
        }
        {
          name: 'FUNCTIONS_EXTENSION_VERSION'
          value: '~4'
        }
        {
          name: 'WEBSITE_NODE_DEFAULT_VERSION'
          value: '~14'
        }
      ])
		}
	}
	identity: {
		type: identityType
	}
}


output id string = functionapp.id
output name string = functionapp.name
output identityPrincipalId string = functionapp.identity.principalId
output outboundIps string[] = split(functionapp.properties.outboundIpAddresses, ',')
output requestUrl string = functionapp.properties.defaultHostName
