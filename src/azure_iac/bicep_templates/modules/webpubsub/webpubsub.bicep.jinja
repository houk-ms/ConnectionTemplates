// The template to create Azure Web PubSub with role assignments and Key Vault secret

param name string = 'wps${uniqueString(resourceGroup().id)}'
param location string = resourceGroup().location
param unitCount int = 1
param sku string = 'Standard_S1'
param pricingTier string = 'Standard'
param principalIds array = []
param roleDefinitionId string = '8cf5e20a-e4b2-4e9d-b3a1-5ceb692c2761'  // SignalR/Web PubSub Contributor
param keyVaultName string = ''
param secretName string = 'myvault/mysecret'

// Create Web PubSub
resource webpubsub 'Microsoft.SignalRService/webPubSub@2021-10-01' = {
    name: name
    location: location
    sku: {
        capacity: unitCount
        name: sku
        tier: pricingTier
    }
    properties: {
        publicNetworkAccess: 'Enabled'
    }
}

// create role assignments for the specified principalIds
resource roleAssignment 'Microsoft.Authorization/roleAssignments@2022-04-01' = [for principalId in principalIds: {
    scope: webpubsub
    name: guid(name, principalId)
    properties: {
        roleDefinitionId: resourceId('Microsoft.Authorization/roleDefinitions', roleDefinitionId)
        principalId: principalId
    }
}]

// create key vault and secret if keyVaultName is specified
resource keyVault 'Microsoft.KeyVault/vaults@2022-07-01' existing = if (keyVaultName != ''){
    name: keyVaultName
}

resource keyVaultSecret 'Microsoft.KeyVault/vaults/secrets@2022-07-01' = if (keyVaultName != ''){
    name: secretName
    parent: keyVault
    properties: {
        attributes: {
            enabled: true
        }
        contentType: 'string'
        value: webpubsub.listKeys().primaryConnectionString
    }
}


output id string = webpubsub.id
output hostName string = webpubsub.properties.hostName
output keyVaultSecretUri string = (keyVaultName != '' ? keyVaultSecret.properties.secretUriWithVersion : '')
